---
title: "3. Advanced parsing of a GenBank record"
output: rmarkdown::html_vignette
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

In this tutorial we will demonstrate how the `gb_extract()` function works. `restez` downloads and stores all GenBank records in text format. Ordinarily, to be able to extract relevant bits of information from a text record in a systematic way we would need to make use of [regular expressions](https://en.wikipedia.org/wiki/Regular_expression). `gb_extract()` uses regular expressions, so we don't have to. Here's how it works.

## A GenBank record

restez comes with an example GenBank record, AY952423, which can be viewed [online](https://www.ncbi.nlm.nih.gov/nuccore/AY952423.1). We can retrieve the record with `rentrez` or load it using the `data()`. We can visualise the record in R as it appears online using `cat()` -- like print but with newline spaces parsed correctly.

```{r record, echo=TRUE}
library(restez)
# record <- rentrez::entrez_fetch(db = 'nucleotide', id = 'AY952423', rettype = 'gb', retmode = 'text')
data(record)
cat(record)
```

## Extracting

We can extract different elements of the above record with `gb_extract()` ....

```{r extract, echo=TRUE}
# such as the LOCUS information ...
(gb_extract(record = record, what = 'locus'))
# the accession
(gb_extract(record = record, what = 'accession'))
# the accession + version
(gb_extract(record = record, what = 'version'))
# the organism name
(gb_extract(record = record, what = 'organism'))
# the sequence definition line
(gb_extract(record = record, what = 'definition'))
# the keywords (this record doesn't have any ....)
(gb_extract(record = record, what = 'keywords'))
# even the features as a list object
features <- gb_extract(record = record, what = 'features')
print(features[[1]])
# and of course the sequence itself
seq <- gb_extract(record = record, what = 'sequence')
str(seq)
```

## From the database

You can try out the above functions yourself on any sequence record by downloading them through the [`rentrez` package](https://github.com/ropensci/rentrez) using `entrez_fetch(db='nucleotide', rettype='gb')`. Or why not test them out using any of the records from the rodents database?

```{r pathset, include=FALSE}
pkgwd <- sub(pattern = 'vignettes', replacement = '' , x = getwd())
rodents_path <- file.path(pkgwd, 'rodents')
```
```{r database, include=TRUE}
library(restez)
restez_path_set(rodents_path)
(rand_id <- sample(suppressWarnings(list_db_ids()), 1))
record <- gb_record_get(rand_id)
(gb_extract(record = record, what = 'features'))
```

## Next up

**[Running phylotaR with restez](https://docs.ropensci.org/restez/articles/4_phylotar.html)**
